<tool id="augtrain" name="Train Augustus" version="1.0.0">
  <description>Training program for Augustus</description>
  <command interpreter="bash">  
		<!-- set aug path and aug config path correctly, assume cwd at begining contain root folder of maker -->
		mkdir trainaugtmp; cd trainaugtmp;

		#if $source.__str__ == 'maker':
		<!-- perl makerOutputTruncate.pl $gff trimmed.gff;
		perl makergff2augustus.pl trimmed.gff > augustus.gff;   these steps are no longer needed since we are converting to gb first -->
		../maker-2.10/maker-2.10/bin/maker2zff $gff ;
		#else
		<!-- perl cegma2gff.pl $gff > augustus.gff ; -->
		../maker-2.10/maker-2.10/bin/cegma2zff $gff $genome;
		#end if

		<!-- simplifyFastaHeaders.pl $genome namestem simplified.fa header.map; -->
		../maker-2.10/augustus.2.7/scripts/gff2gbSmallDNA.pl $gff genome.dna 1000 genes.gb;
		../maker-2.10/augustus.2.7/scripts/autoAugTrain.pl --trainingset=genes.gb --species=${species};
		RESULT=${?};
		cd ..; rm -R trainaugtmp;
		
		if [ ${RESULT} -eq 0 ]; then
		echo "Training for ${species} finished successfully" > $out; true;
		else
		echo "Training for ${species} failed" > $out; false;
		fi


        </command>
	<inputs>
		<param name="source" type="select" label="Source" help="Source of training gff file">
			<option value="maker">maker</option>
			<option value="cegma">CEGMA</option>
		</param>
		<param name="gff" type="data" format="gff" label="gff training file" />
		<param name="species" type="text" label="Species" help="Name of species to be trained (must be unique from provided species)"/>
		<param name="genome" type="data" format="fasta" label="Genome"/>
	</inputs>

	<outputs>
     	   <data format="txt" name="out"> </data>
	</outputs>

<!--  need tests  -->

	<help>

This program automatically trains Augustus given initial input from either maker or CEGMA.

The result dataset in stored in Augustus' configuration folder.

To use it in Maker, simply provide the species name to Maker.

The name of species you train must be unique from built in species and all species you and others have trained before.

Currently there is no easy way to check what species have been trained; this functionality may be implemented in the future

	</help>


</tool>
