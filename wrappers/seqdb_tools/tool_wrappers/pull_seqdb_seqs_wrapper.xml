<tool id="seqdb_pull_seqs" name="Load Sequences from SeqDB" version="1.3">
  <description> through web services. Produces a fasta file of the specified sequences. </description>
  <requirements>
      <requirement type="package" version="1.3_test">package_seqdb_py</requirement>
  </requirements>
  
  <command>
      
      pull_seqdb_seqs -c $config_file $pull_type_cond.pull_type
        #if $pull_type_cond.pull_type != "its"
            #if $pull_type_cond.specimen_nums
                --specNums "$pull_type_cond.specimen_nums"
            #end if
        
            #if $pull_type_cond.sequence_name
                --seqName  $pull_type_cond.sequence_name
            #end if

            #if $pull_type_cond.region_name
                --geneRegion  $pull_type_cond.region_name
            #end if

            #if $pull_type_cond.project_name
                --projectName  $pull_type_cond.project_name
            #end if

            #if $pull_type_cond.collection_code
                --collectionCode  $pull_type_cond.collection_code
            #end if

            #if $pull_type_cond.taxon_value
                --taxRank $pull_type_cond.taxon_rank --taxValue $pull_type_cond.taxon_value
            #end if

            #if $pull_type_cond.output_taxonomy
            	-t 
            #end if
        #end if
      
  </command>

  <inputs>
      <param name="config_file" type="data" label="Sequence Database Configuration File *" optional="False" />
      
      <conditional name="pull_type_cond">
          <param name="pull_type" type="select" label="Select which sequences you would like to load *">
              <option value="consensus">Consensus sequences</option>
              <option value="all">All sequences</option>
              <option value="its" help="ITS sequences are defined as sequences linked to a region which has ITS region symbols in its name.">ITS sequences</option>
          </param>
          <when value="all">
              <param name="specimen_nums" type="text" label="Filter on Specimen Identifier(s). Separate multiple by comma." optional="True" />
              <param name="sequence_name" type="text" label="Filter on Sequence Name (keyword)" optional="True" />
              <param name="region_name" type="text" label="Filter on Region Name (keyword)" optional="True" />
              <param name="project_name" type="text" label="Filter on Project Name (keyword)" optional="True" />
              <param name="collection_code" type="text" label="Filter on Collection Code" optional="True" />
              <param name="taxon_rank" type="select" label="Filter on Taxonomic Rank " optional="True" >
                  <option value="species">Species</option>
                  <option value="genus">Genus</option>
                  <option value="family">Family</option>
                  <option value="order">Order</option>
                  <option value="class">Class</option>
                  <option value="phylum">Phylum</option>
              </param>
              <param name="taxon_value" type="text" label="Taxonomic Value (for the Taxonomic Rank above) " optional="True" />
              <param name="output_taxonomy" type="boolean" label="Output taxonomy file?" optional="True" checked="False" />
          </when>
          <when value="consensus">
              <param name="specimen_nums" type="text" label="Filter on Specimen Identifier(s). Separate multiple by comma." optional="True" />
              <param name="sequence_name" type="text" label="Filter on Sequence Name (keyword)" optional="True" />
              <param name="region_name" type="text" label="Filter on Region Name (keyword)" optional="True" />
              <param name="project_name" type="text" label="Filter on Project Name (keyword)" optional="True" />
              <param name="collection_code" type="text" label="Filter on Collection Code" optional="True" />
              <param name="taxon_rank" type="select" label="Filter on Taxonomic Rank " optional="True" >
                  <option value="species">Species</option>
                  <option value="genus">Genus</option>
                  <option value="family">Family</option>
                  <option value="order">Order</option>
                  <option value="class">Class</option>
                  <option value="phylum">Phylum</option>
              </param>
              <param name="taxon_value" type="text" label="Taxonomic Value (for the Taxonomic Rank above)" optional="True" />
              <param name="output_taxonomy" type="boolean" label="Output taxonomy file?" optional="True" checked="False" />
          </when>
      </conditional>
      
  </inputs>
  
  <outputs>
    <data name="seqdb_sequences"
        format="fasta"
        from_work_dir="seqdb_sequences.fasta"
        label="Sequences from SeqDB" />
    <data name="seqdb_taxonomy_file"
        format="txt"
        from_work_dir="seqdb_taxonomy_file.txt"
        label="Taxonomy file for SeqDB sequences">

        <filter>pull_type_cond['output_taxonomy']</filter> 
    </data>
  </outputs>

  <!-- Provide explanations for various exit status codes. Avoid situations where tool exists with status 0 but other errors (in Galaxy) set its status to Error -->
  <stdio>
  	   <!-- Since exit code 0 is not specified, the tool will execute successfully, even if Galaxy writes something to stderr. -->
  	  <exit_code range="1:" level="fatal" description="Error" />
      <exit_code range="2"   level="fatal"   description="Out of Memory" />
      <exit_code range="3:5" level="warning" description="Low disk space" />
      <exit_code range="6:63"  level="fatal"   description="Tool execution error (exit codes 6-63)" />
      <exit_code range="64"  level="fatal"   description="Command line usage error" />
      <exit_code range="65:72"  level="fatal"   description="Tool execution error (exit codes 65-72)" />
      <exit_code range="73"  level="fatal"   description="Can't create (user) output file" />
      <exit_code range="74:"  level="fatal"   description="Tool execution error (exit codes 74 and up)" />
  </stdio>

  <tests>
    <test>
      <output name="out_file" file="seqdb_sequences.fasta" />
    </test>
  </tests>

  <help>
Required fields are marked with a * .

--------

.. class:: warningmark

**Execution time**: Some combination of parameters may result in a long execution time. Depending on the number of sequences that are associated with supplied API key, loading "All Sequences" without specifying any of the filters could take a long time. Also, requesting a taxonomy file ("Output taxonomy file") will also impact execution time.

--------

**What it does**

The tool fetches different types of sequences from Sequence DB and writes them to a fasta file.

--------

**Tool Parameters**

**Sequence Database Configuration File** is a file that contains SeqDB API connection parameters. To generate this file, use "SeqDB Configuration" tool.

**Output taxonomy file?** when selected, the tool will produce a taxonomy file to complement a fasta sequence file. The taxonomy is extracted from SeqDB and is an accepted taxonomic determination of a specimen, which contains requested sequence. The file is of the following format::

	[SeqDb sequence ID]  [kingdom];[phylum];[class];[order];[family];[genus];[species]

Example::

	27755	Fungi;Oomycota;Oomycetes;Pythiales;Pythiaceae;Pythium;arrhenomanes;
	27761	Fungi;Oomycota;Oomycetes;Pythiales;Pythiaceae;Pythium;arrhenomanes;
	...

      
  </help>

</tool>
