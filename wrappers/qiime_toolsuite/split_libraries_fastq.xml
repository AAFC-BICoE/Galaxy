<?xml version="1.0" ?>
<tool id="split_libraries_fastq" name="split libraries fastq" version="1.7.0">
	<description>This script performs demultiplexing of Fastq sequence data where barcodes and sequences are contained in two separate fastq files (common on Illumina runs).</description>
	<requirements>
<requirement type="package" version="1.7.0">qiime</requirement>	</requirements>
	<command>split_libraries_fastq.py
#def list_dict_to_string(list_dict):
	#set $file_list = list_dict[0]['additional_input'].__getattr__('file_name')
	#for d in list_dict[1:]:
		#set $file_list = $file_list + ',' + d['additional_input'].__getattr__('file_name')
	#end for
	#return $file_list
#end def
 -i $list_dict_to_string($input_files_sequence_read_fps) -o split_libraries_fastq_output -m $list_dict_to_string($input_files_mapping_fps)
#if $input_files_barcode_read_fps:
 -b $list_dict_to_string($input_files_barcode_read_fps)
#end if

#if $store_qual_scores:
 --store_qual_scores
#end if

#if str($sample_id):
 --sample_id=$sample_id
#end if

#if $store_demultiplexed_fastq:
 --store_demultiplexed_fastq
#end if

#if $retain_unassigned_reads:
 --retain_unassigned_reads
#end if

#if $max_bad_run_length:
 -r $max_bad_run_length
#end if

#if $min_per_read_length_fraction:
 -p $min_per_read_length_fraction
#end if

#if $sequence_max_n:
 -n $sequence_max_n
#end if

#if $start_seq_id:
 -s $start_seq_id
#end if

#if $rev_comp_barcode:
 --rev_comp_barcode
#end if

#if $rev_comp_mapping_barcodes:
 --rev_comp_mapping_barcodes
#end if

#if $rev_comp:
 --rev_comp
#end if

#if $phred_quality_threshold:
 -q $phred_quality_threshold
#end if

#if str($barcode_type):
 --barcode_type=$barcode_type
#end if

#if $max_barcode_errors:
 --max_barcode_errors=$max_barcode_errors
#end if

#if str($phred_offset) != 'None':
 --phred_offset=$phred_offset
#end if
;
compress_path.py -i split_libraries_fastq_output -o $output_dir
</command>
	<inputs>
		<repeat name="input_files_sequence_read_fps" optional="False" title="sequence_read_fps">
			<param label="-i/--sequence_read_fps: the sequence read fastq files (comma-separated if more than one)" name="additional_input" type="data"/>
		</repeat>
		<repeat name="input_files_mapping_fps" optional="False" title="mapping_fps">
			<param label="-m/--mapping_fps: metadata mapping files (comma-separated if more than one)" name="additional_input" type="data"/>
		</repeat>
		<repeat name="input_files_barcode_read_fps" optional="True" title="barcode_read_fps">
			<param label="-b/--barcode_read_fps: the barcode read fastq files (comma-separated if more than one) [default: None]" name="additional_input" type="data"/>
		</repeat>
		<param label="--store_qual_scores: store qual strings in .qual files [default: False]" name="store_qual_scores" selected="False" type="boolean"/>
		<param default="None" label="--sample_id: single sample id to be applied to all sequences (used when data is not multiplexed) [default: None]" name="sample_id" optional="True" type="text"/>
		<param label="--store_demultiplexed_fastq: write demultiplexed fastq files [default: False]" name="store_demultiplexed_fastq" selected="False" type="boolean"/>
		<param label="--retain_unassigned_reads: retain sequences which don't map to a barcode in the mapping file (sample ID will be &quot;Unassigned&quot;) [default: False]" name="retain_unassigned_reads" selected="False" type="boolean"/>
		<param default="3" label="-r/--max_bad_run_length: max number of consecutive low quality base calls allowed before truncating a read [default: 3]" name="max_bad_run_length" optional="True" type="integer"/>
		<param default="0.75" label="-p/--min_per_read_length_fraction: min number of consecutive high quality base calls to include a read (per single end read) as a fraction of the input read length [default: 0.75]" name="min_per_read_length_fraction" optional="True" type="float"/>
		<param default="0" label="-n/--sequence_max_n: maximum number of N characters allowed in a sequence to retain it -- this is applied after quality trimming, and is total over combined paired end reads if applicable [default: 0]" name="sequence_max_n" optional="True" type="integer"/>
		<param default="0" label="-s/--start_seq_id: start seq_ids as ascending integers beginning with start_seq_id [default: 0]" name="start_seq_id" optional="True" type="integer"/>
		<param label="--rev_comp_barcode: reverse compliment barcode reads before lookup [default: False]" name="rev_comp_barcode" selected="False" type="boolean"/>
		<param label="--rev_comp_mapping_barcodes: reverse compliment barcode in mapping before lookup (useful if barcodes in mapping file are reverse compliments of golay codes)[default: False]" name="rev_comp_mapping_barcodes" selected="False" type="boolean"/>
		<param label="--rev_comp: reverse compliment sequence before writing to output file (useful for reverse-orientation reads) [default: False]" name="rev_comp" selected="False" type="boolean"/>
		<param default="3" label="-q/--phred_quality_threshold: the minimum acceptable Phred quality score (e.g., for Q20 and better, specify -q 20) [default: 3]" name="phred_quality_threshold" optional="True" type="integer"/>
		<param default="golay_12" label="--barcode_type: The type of barcode used. This can be an integer, e.g. for length 6 barcodes, or golay_12 for golay error-correcting barcodes. Error correction will only be applied for golay_12 barcodes. [default: golay_12]" name="barcode_type" optional="True" type="text"/>
		<param default="1.5" label="--max_barcode_errors: maximum number of errors in barcode [default: 1.5]" name="max_barcode_errors" optional="True" type="float"/>
		<param label="--phred_offset: the ascii offset to use when decoding phred scores - warning: in most cases you don't need to pass this value [default: determined automatically]" name="phred_offset" optional="True" type="select">
			<option selected="True" value="None">Selection is Optional</option>
			<option value="33">33</option>
			<option value="64">64</option>
		</param>
	</inputs>
	<outputs>
		<data format="tgz" name="output_dir"/>
	</outputs>
	<help>
</help>
</tool>
