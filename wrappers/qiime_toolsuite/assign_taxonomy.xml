<?xml version="1.0" ?>
<tool id="assign_taxonomy" name="assign taxonomy" version="1.7.0">
	<description>Assign taxonomy to each sequence</description>
	<requirements>
		<requirement type="package">qiime</requirement>
	</requirements>
	<command>
#if str($blast_db) != 'None':
 uncompress_tgz.py -i $blast_db -o blast_db;
 BLAST_DB_NAME=`get_blast_db_path.py -i blast_db`;
#end if
assign_taxonomy.py -i $input_fasta_fp
#if str($id_to_taxonomy_fp) != 'None':
 -t $id_to_taxonomy_fp
#end if

#if str($reference_seqs_fp) != 'None':
 -r $reference_seqs_fp
#end if

#if str($training_data_properties_fp) != 'None':
 -p $training_data_properties_fp
#end if

#if str($read_1_seqs_fp) != 'None':
 --read_1_seqs_fp=$read_1_seqs_fp
#end if

#if str($read_2_seqs_fp) != 'None':
 --read_2_seqs_fp=$read_2_seqs_fp
#end if

#if $single_ok:
 --single_ok
#end if

#if $no_single_ok_generic:
 --no_single_ok_generic
#end if

#if str($read_id_regex):
 --read_id_regex=$read_id_regex
#end if

#if str($amplicon_id_regex):
 --amplicon_id_regex=$amplicon_id_regex
#end if

#if str($header_id_regex):
 --header_id_regex=$header_id_regex
#end if

#if str($assignment_method) != 'None':
 -m $assignment_method
#end if

#if str($blast_db) != 'None':
 -b \$BLAST_DB_NAME
#end if

#if $confidence:
 -c $confidence
#end if

#if $rdp_max_memory:
 --rdp_max_memory=$rdp_max_memory
#end if

#if $e_value:
 -e $e_value
#end if

#if str($tree_fp) != 'None':
 --tree_fp=$tree_fp
#end if
 -o assign_taxonomy_output;
compress_path.py -i assign_taxonomy_output -o $output_dir
</command>
	<inputs>
		<param label="-i/--input_fasta_fp: path to the input fasta file" name="input_fasta_fp" optional="False" type="data"/>
		<param default="/home/kevin/qiime_software/gg_otus-13_8-release/taxonomy/97_otu_taxonomy.txt" label="-t/--id_to_taxonomy_fp: Path to tab-delimited file mapping sequences to assigned taxonomy. Each assigned taxonomy is provided as a semicolon-separated list. For assignment with rdp, each assigned taxonomy must be exactly 6 levels deep. [default: /home/kevin/qiime_software/gg_otus-13_8-release/taxonomy/97_otu_taxonomy.txt; REQUIRED when method is blast]" name="id_to_taxonomy_fp" optional="True" type="data"/>
		<param default="/home/kevin/qiime_software/gg_otus-13_8-release/rep_set/97_otus.fasta" label="-r/--reference_seqs_fp: Path to reference sequences.  For assignment with blast, these are used to generate a blast database. For assignment with rdp, they are used as training sequences for the classifier. [default: /home/kevin/qiime_software/gg_otus-13_8-release/rep_set/97_otus.fasta; REQUIRED if -b is not provided when method is blast]" name="reference_seqs_fp" optional="True" type="data"/>
		<param label="-p/--training_data_properties_fp: Path to &quot;.properties&quot; file in pre-compiled training data for the RDP Classifier.  This option is overridden by the -t and -r options. [default: None]" name="training_data_properties_fp" optional="True" type="data"/>
		<param label="--read_1_seqs_fp: Path to fasta file containing the first read from paired-end sequencing, prior to OTU clustering (used for RTAX only). [default: None]" name="read_1_seqs_fp" optional="True" type="data"/>
		<param label="--read_2_seqs_fp: Path to fasta file containing a second read from paired-end sequencing, prior to OTU clustering (used for RTAX only). [default: None]" name="read_2_seqs_fp" optional="True" type="data"/>
		<param label="--single_ok: When classifying paired ends, allow fallback to single-ended classification when the mate pair is lacking (used for RTAX only). [default: False]" name="single_ok" selected="False" type="boolean"/>
		<param label="--no_single_ok_generic: When classifying paired ends, do not allow fallback to single-ended classification when the mate pair is overly generic (used for RTAX only). [default: False]" name="no_single_ok_generic" selected="False" type="boolean"/>
		<param default="\S+\s+(\S+)" label="--read_id_regex: Used to parse the result of OTU clustering, to get the read_1_id for each clusterID.  (used for RTAX only). [default: \S+\s+(\S+)]" name="read_id_regex" optional="True" type="text"/>
		<param default="(\S+)\s+(\S+?)\/" label="--amplicon_id_regex: Used to parse the result of split_libraries, to get the ampliconID for each read_1_id.  Two groups capture read_1_id and ampliconID, respectively.  (used for RTAX only). [default: (\S+)\s+(\S+?)\/]" name="amplicon_id_regex" optional="True" type="text"/>
		<param default="\S+\s+(\S+?)\/" label="--header_id_regex: Used to choose the part of the header in the OTU clustering file that Rtax reports back as the ID.  The default uses the amplicon ID, not including /1 or /3, as the primary key for the query sequences. (used for RTAX only). [default: \S+\s+(\S+?)\/]" name="header_id_regex" optional="True" type="text"/>
		<param label="-m/--assignment_method: Taxon assignment method, must be one of rdp, blast, rtax, mothur, tax2tree [default: rdp]" name="assignment_method" optional="True" type="select">
			<option selected="True" value="None">Selection is Optional</option>
			<option value="rdp">rdp</option>
			<option value="blast">blast</option>
			<option value="rtax">rtax</option>
			<option value="mothur">mothur</option>
			<option value="tax2tree">tax2tree</option>
		</param>
		<param label="-b/--blast_db: Database to blast against.  Must provide either --blast_db or --reference_seqs_db for assignment with blast [default: None]" name="blast_db" optional="True" type="data"/>
		<param default="0.8" label="-c/--confidence: Minimum confidence to record an assignment, only used for rdp and mothur methods [default: 0.8]" name="confidence" optional="True" type="float"/>
		<param default="1500" label="--rdp_max_memory: Maximum memory allocation, in MB, for Java virtual machine when using the rdp method.  Increase for large training sets [default: 1500]" name="rdp_max_memory" optional="True" type="integer"/>
		<param default="0.001" label="-e/--e_value: Maximum e-value to record an assignment, only used for blast method [default: 0.001]" name="e_value" optional="True" type="float"/>
		<param label="--tree_fp: The filepath to a prebuilt tree containing both the representative and reference sequences. Required for Tax2Tree assignment." name="tree_fp" optional="True" type="data"/>
	</inputs>
	<outputs>
		<data format="tgz" name="output_dir"/>
	</outputs>
	<help>Contains code for assigning taxonomy, using several techniques.

Given a set of sequences, %prog attempts to assign the taxonomy of each sequence. Currently there are three methods implemented: assignment with BLAST, assignment with the RDP classifier, and assignment with the RTAX classifier. The output of this step is a mapping of input sequence identifiers (1st column of output file) to taxonomy (2nd column) and quality score (3rd column). The sequence identifier of the best BLAST hit is also included if the blast method is used (4th column).

Example reference data sets and id_to_taxonomy maps can be found in the Greengenes OTUs. To get the latest build of those click the &quot;Most recent Greengenes OTUs&quot; link on the top right of http://blog.qiime.org. After downloading and unzipping you can use the following following files as -r and -t. As of this writing the latest build was gg_otus_4feb2011, but that portion of path to these files will change with future builds. Modify these paths accordining when calling %prog.

-r gg_otus_4feb2011/rep_set/gg_97_otus_4feb2011.fasta
-t gg_otus_4feb2011/taxonomies/greengenes_tax_rdp_train.txt (best for retraining the RDP classifier)
-t gg_otus_4feb2011/taxonomies/greengenes_tax.txt (best for BLAST taxonomy assignment)

The consensus taxonomy assignment implemented here is the most detailed lineage description shared by 90% or more of the sequences within the OTU (this level of agreement can be adjusted by the user). The full lineage information for each sequence is one of the output files of the analysis. In addition, a conflict file records cases in which a phylum-level taxonomy assignment disagreement exists within an OTU (such instances are rare and can reflect sequence misclassification within the greengenes database).</help>
</tool>
