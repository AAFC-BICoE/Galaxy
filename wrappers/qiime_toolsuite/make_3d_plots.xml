<?xml version="1.0" ?>
<tool id="make_3d_plots" name="make 3d plots" version="1.7.0">
	<description>Make 3D PCoA plots</description>
	<requirements>
<requirement type="package" version="1.7.0">qiime</requirement>	</requirements>
	<command>uncompress_tgz.py -i $coord_fname -o make_3d_plots_input;
make_3d_plots.py -i make_3d_plots_input -m $map_fname
#if str($colorby):
 -b $colorby
#end if

#if str($scaling_method) != 'None':
 -s $scaling_method
#end if

#if str($custom_axes):
 -a $custom_axes
#end if

#if str($prefs_path) != 'None':
 -p $prefs_path
#end if

#if str($background_color) != 'None':
 -k $background_color
#end if

#if str($ellipsoid_smoothness) != 'None':
 --ellipsoid_smoothness=$ellipsoid_smoothness
#end if

#if $ellipsoid_opacity:
 --ellipsoid_opacity=$ellipsoid_opacity
#end if

#if str($ellipsoid_method) != 'None':
 --ellipsoid_method=$ellipsoid_method
#end if

#if str($master_pcoa) != 'None':
 --master_pcoa=$master_pcoa
#end if

#if str($taxa_fname) != 'None':
 -t $taxa_fname
#end if

#if $n_taxa_keep:
 --n_taxa_keep=$n_taxa_keep
#end if
 --biplot_output_file=$biplot_output_file
#if str($output_format) != 'None':
 --output_format=$output_format
#end if

#if $interpolation_points:
 -n $interpolation_points
#end if

#if $polyhedron_points:
 --polyhedron_points=$polyhedron_points
#end if

#if $polyhedron_offset:
 --polyhedron_offset=$polyhedron_offset
#end if

#if str($add_vectors):
 --add_vectors=$add_vectors
#end if

#if str($vectors_algorithm) != 'None':
 --vectors_algorithm=$vectors_algorithm
#end if

#if $vectors_axes:
 --vectors_axes=$vectors_axes
#end if
 --vectors_path=$vectors_path
#if $weight_by_vector:
 -w
#end if

#if $window_size:
 --window_size=$window_size
#end if
 -o make_3d_plots_output;
compress_path.py -i make_3d_plots_output -o $output_dir
</command>
	<inputs>
		<param label="-i/--coord_fname: Input principal coordinates filepath (i.e., resulting file from principal_coordinates.py).  Alternatively, a directory containing multiple principal coordinates files for jackknifed PCoA results." name="coord_fname" type="data"/>
		<param label="-m/--map_fname: Input metadata mapping filepath" name="map_fname" optional="False" type="data"/>
		<param label="-b/--colorby: Comma-separated list categories metadata categories (column headers) to color by in the plots. The categories must match the name of a column header in the mapping file exactly. Multiple categories can be list by comma separating them without spaces. The user can also combine columns in the mapping file by separating the categories by &quot;&amp;&amp;&quot; without spaces. [default=color by all]" name="colorby" optional="True" type="text"/>
		<param label="-s/--scaling_method: Comma-separated list of scaling methods (i.e. scaled or unscaled) [default=unscaled]" multiple="True" name="scaling_method" optional="True" type="select">
			<option selected="True" value="None">Selection is Optional</option>
			<option value="scaled">scaled</option>
			<option value="unscaled">unscaled</option>
		</param>
		<param label="-a/--custom_axes: This is the category from the metadata mapping file to use as a custom axis in the plot.  For instance, if there is a pH category and you would like to see the samples plotted on that axis instead of PC1, PC2, etc., one can use this option.  It is also useful for plotting time-series data. Note: if there is any non-numeric data in the column, it will not be plotted [default: None]" name="custom_axes" optional="True" type="text"/>
		<param label="-p/--prefs_path: Input user-generated preferences filepath. NOTE: This is a file with a dictionary containing preferences for the analysis. [default: None]" name="prefs_path" optional="True" type="data"/>
		<param label="-k/--background_color: Background color to use in the plots. [default: black]" name="background_color" optional="True" type="select">
			<option selected="True" value="None">Selection is Optional</option>
			<option value="black">black</option>
			<option value="white">white</option>
		</param>
		<param label="--ellipsoid_smoothness: Used only when plotting ellipsoids for jackknifed beta diversity (i.e. using a directory of coord files instead of a single coord file). Valid choices are 0-3. A value of 0 produces very coarse &quot;ellipsoids&quot; but is fast to render. If you encounter a memory error when generating or displaying the plots, try including just one metadata column in your plot. If you still have trouble, reduce the smoothness level to 0. [default: 1]" name="ellipsoid_smoothness" optional="True" type="select">
			<option selected="True" value="None">Selection is Optional</option>
			<option value="0">0</option>
			<option value="1">1</option>
			<option value="2">2</option>
			<option value="3">3</option>
		</param>
		<param default="0.33" label="--ellipsoid_opacity: Used only when plotting ellipsoids for jackknifed beta diversity (i.e. using a directory of coord files instead of a single coord file). The valid range is between 0-1. 0 produces completely transparent (invisible) ellipsoids and 1 produces completely opaque ellipsoids. [default=0.33]" name="ellipsoid_opacity" optional="True" type="float"/>
		<param label="--ellipsoid_method: Used only when plotting ellipsoids for jackknifed beta diversity (i.e. using a directory of coord files instead of a single coord file). Valid values are &quot;IQR&quot; and &quot;sdev&quot;. [default=IQR]" name="ellipsoid_method" optional="True" type="select">
			<option selected="True" value="None">Selection is Optional</option>
			<option value="IQR">IQR</option>
			<option value="sdev">sdev</option>
		</param>
		<param default="None" label="--master_pcoa: Used only when plotting ellipsoids for jackknifed beta diversity (i.e. using a directory of coord files instead of a single coord file). These coordinates will be the center of each ellipisoid. [default: None; arbitrarily chosen PC matrix will define the center point]" name="master_pcoa" optional="True" type="data"/>
		<param default="None" label="-t/--taxa_fname: Used only when generating BiPlots. Input summarized taxa filepath (i.e., from summarize_taxa.py). Taxa will be plotted with the samples. [default=None]" name="taxa_fname" optional="True" type="data"/>
		<param default="10" label="--n_taxa_keep: Used only when generating BiPlots. This is the number of taxa  to display. Use -1 to display all. [default: 10]" name="n_taxa_keep" optional="True" type="integer"/>
		<param label="--output_format: Output format. If this option is set to invue you will need to also use the option -b to define which column(s) from the metadata file the script should use when writing an output file. [default: king]" name="output_format" optional="True" type="select">
			<option selected="True" value="None">Selection is Optional</option>
			<option value="king">king</option>
			<option value="invue">invue</option>
		</param>
		<param default="0" label="-n/--interpolation_points: Used only when generating inVUE plots. Number of points between samples for interpolatation. [default: 0]" name="interpolation_points" optional="True" type="integer"/>
		<param default="4" label="--polyhedron_points: Used only when generating inVUE plots. The number of points to be generated when creating a frame around the PCoA plots. [default: 4]" name="polyhedron_points" optional="True" type="integer"/>
		<param default="1.5" label="--polyhedron_offset: Used only when generating inVUE plots. The offset to be added to each point created when using the --polyhedron_points option. This is only used when using the invue output_format. [default: 1.5]" name="polyhedron_offset" optional="True" type="float"/>
		<param default="None" label="--add_vectors: Create vectors based on a column of the mapping file. This parameter accepts up to 2 columns: (1) create the vectors, (2) sort them. If you wanted to group by Species and order by SampleID you will pass --add_vectors=Species but if you wanted to group by Species but order by DOB you will pass --add_vectors=Species,DOB; this is useful when you use --custom_axes param [default: None]" name="add_vectors" optional="True" type="text"/>
		<param label="--vectors_algorithm: The algorithm used to create the vectors. The method used can be RMS (either using 'avg' or 'trajectory'); or the first difference (using 'diff'), or 'wdiff' for a modified first difference algorithm (see --window_size) the aforementioned use all the dimensions and weights them using their percentage explained; returns the norm of the created vectors; and their confidence using ANOVA. The Vectors are created as follows: for 'avg' it calculates the average at each timepoint (averaging within a group), then calculates the norm of each point; for 'trajectory' calculates the norm for the 1st-2nd, 2nd-3rd, etc.; for 'diff', it calculates the norm for all the time-points and then calculates the first difference for each resulting point; for for 'wdiff' it uses the same procedure as the previous method but the subtraction will be between the mean of the next number of elements specified in --window_size and the current element, both methods ('wdiff' and 'diff') will also include the mean and the standard deviation of the calculations [defautl: None]" name="vectors_algorithm" optional="True" type="select">
			<option selected="True" value="None">Selection is Optional</option>
			<option value="avg">avg</option>
			<option value="trajectory">trajectory</option>
			<option value="diff">diff</option>
			<option value="wdiff">wdiff</option>
		</param>
		<param default="3" label="--vectors_axes: The number of axes to account while doing the vector specificcalculations. We suggest using 3 because those are the ones being displayed in the plots but you could use any number between 1 and number of samples- 1. To use all of them pass 0. [default: 3]" name="vectors_axes" optional="True" type="integer"/>
		<param label="-w/--weight_by_vector: Use -w when you want the output created in the --vectors_path to be weighted by the space between samples in the --add_vectors, sorting column, i. e. days between samples [default: False]" name="weight_by_vector" selected="False" type="boolean"/>
		<param default="None" label="--window_size: Use --window_size, when selecting the modified first difference ('wdiff') option for --vectors_algorithm. This integer determines the number of elements to be averaged per element subtraction, the resulting vector. [default: None]" name="window_size" optional="True" type="integer"/>
	</inputs>
	<outputs>
		<data format="txt" name="biplot_output_file"/>
		<data format="txt" name="vectors_path"/>
		<data format="tgz" name="output_dir"/>
	</outputs>
	<help>This script automates the construction of 3D plots (kinemage format) from the PCoA output file generated by principal_coordinates.py (e.g. P1 vs. P2 vs. P3, P2 vs. P3 vs. P4, etc., where P1 is the first component).
By default, the script will plot the first three dimensions in your file. Other combinations can be viewed using the &quot;Views:Choose viewing axes&quot; option in the KiNG viewer (Chen, Davis, &amp; Richardson, 2009), which may require the installation of kinemage software. The first 10 components can be viewed using &quot;Views:Paralled coordinates&quot; option or typing &quot;/&quot;. The mouse can be used to modify display parameters, to click and rotate the viewing axes, to select specific points (clicking on a point shows the sample identity in the low left corner), or to select different analyses (upper right window). Although samples are most easily viewed in 2D, the third dimension is indicated by coloring each sample (dot/label) along a gradient corresponding to the depth along the third component (bright colors indicate points close to the viewer).</help>
</tool>
