<tool id="antiSMASH_wrapper" name="antiSMASH" version="2.0.3" >

	<description>Run the antiSMASH pipeline</description>

	<command interpreter="bash" >
		#if $input_options.input_type == "--input-type nucl"
			antiSMASH_wrapper $in_file $ext $html_file $input_options.xls_out $xls_file $input_options.embl_out $embl_file $input_options.gbk_out $gbk_file --outputfolder $html_file.files_path -c $cpus --input-type nucl $input_options.cluster $input_options.subcluster $input_options.smcogs $input_options.inclusive $input_options.hmmer $input_options.blast -v --enable $types $eukaryotic
		#else
			antiSMASH_wrapper $in_file $ext $html_file $input_options.genpept_out $gp_file -c $cpus --input-type prot --outputfolder $html_file.files_path -v --enable $types $eukaryotic
		#end if
	</command>

	<inputs>
		<param label="Input File" name="in_file" type="data" format="fasta,txt,gff3" help="Provide GBK/EMBL/FASTA file."/>
		<param label="File Type" name="ext" type="select" display="radio" multiple="false" help="Specify the extension of the input file.">
			<option value="fasta">Fasta</option>
			<option value="gb">GeneBank (GBK/GB)</option>
			<option value="embl">EMBL</option>
                        <!-- antiSMASH doesn't naitively allow GFF files. But we include a converter -->
                        <option value="gff">GFF3 with FASTA</option>
		</param>
		<param label="CPU Parallel" name="cpus" type="integer" value="8" min="0" max="16" help="Entre the number of CPUs to use in parallel. Default: 8 Max: 16" />
		
		<param name="eukaryotic" type="select" label="Origin of DNA">
           		<option value="" selected="True">Prokaryotic</option>
            		<option value="--eukaryotic">Eukaryotic</option>
        	</param>
		
		<param name="types" type="select" display="checkboxes" multiple="true" label="Gene cluster types to search" help="You must select at least one type to search for.">
            		<option value="t1pks" selected="True">type I polyketide synthases</option>
            		<option value="t2pks" selected="True">type II polyketide synthases</option>
            		<option value="t3pks" selected="True">type III polyketide synthases</option>
            		<option value="t4pks" selected="True">type IV polyketide synthases</option>
            		<option value="transatpks" selected="True">trans-AT PKS</option>
            		<option value="nrps" selected="True">nonribosomal peptide synthetases</option>
            		<option value="terpene" selected="True">terpene synthases</option>
            		<option value="lantipeptide" selected="True">lantipeptides</option>
            		<option value="bacteriocin" selected="True">bacteriocins</option>
            		<option value="blactam" selected="True">beta-lactams</option>
            		<option value="amglyccycl" selected="True">aminoglycosides / aminocyclitols</option>
            		<option value="aminocoumarin" selected="True">aminocoumarins</option>
            		<option value="siderophore" selected="True">siderophores</option>
            		<option value="ectoine" selected="True">ectoines</option>
            		<option value="butyrolactone" selected="True">butyrolactones</option>
            		<option value="indole" selected="True">indoles</option>
            		<option value="nucleoside" selected="True">nucleosides</option>
            		<option value="phosphoglycolipid" selected="True">phosphoglycolipids</option>
			<option value="melanin" selected="True">Melanins</option>
            		<option value="oligosaccharide" selected="True">oligosaccharides</option>
	                <option value="furan" selected="True">furans</option>
	                <option value="hserlactone" selected="True">homoserine lactones</option>
          		<option value="thiopeptide" selected="True">thiopeptides</option>
            		<option value="phenazine" selected="True">phenazines</option>
                        <option value="phosphonate" selected="True">phosphonates</option>
			<option value="other" selected="True">others</option>
		</param>

		<conditional name="input_options">
			<param label="Input Type" name="input_type" type="select" multiple="false" help="Select whether the input file contains nucleotide or peptide sequences. (Only one)" >
				<option value="--input-type nucl">Nucleotide</option>
				<option value="--input-type prot">Peptide</option>
			</param>

			<when value="--input-type nucl">
				<param label="BLAST Clusters" name="cluster" type="boolean" truevalue="--clusterblast" falsevalue="" help="BLAST identified clusters against known clusters." />
				<param label="Blast Subclusters" name="subcluster" type="boolean" truevalue="--subclusterblast" falsevalue="" help="BLAST identified clusters against known subclusters." />
				<param label="Sec.met. clusters" name="smcogs" type="boolean" truevalue="--smcogs" falsevalue="" help="Look for sec.met. clusters of orthologous groups." />
				<param label="Inclusive Algorithm" name="inclusive" type="boolean" truevalue="--inclusive" falsevalue="" help="Use inclusive algorithm for cluster detection." />
				<param label="Genome HMMer Analysis" name="hmmer" type="boolean" truevalue="--full-hmmer" falsevalue="" help="Run a whole-genome HMMer analysis." />
				<param label="Genome BLAST Analysis" name="blast" type="boolean" truevalue="--full-blast" falsevalue="" help="Run a whole-genome BLAST analysis." />

				<param label="Output XLS to history?" name="xls_out" type="boolean" truevalue="xls_out" falsevalue="no_xls" />
				<param label="Output EMBL to history?" name="embl_out" type="boolean" truevalue="embl_out" falsevalue="no_embl" />
				<param label="Output GenBank summary file to history?" name="gbk_out" type="boolean" truevalue="gbk_out" falsevalue="no_gbk" />
			</when>

			<when value="--input-type prot">
				<param label="Output GenPept summary file to history?" name="genpept_out" type="boolean" truevalue="genpept_out" falsevalue="no_genpept" />
			</when>
		</conditional>
	</inputs>

	<outputs>
		<data format="html" name="html_file" label="HTML File" />
		<data format="txt" name="embl_file" label="EMBL Output">
			<filter>input_options['input_type'] == "--input-type nucl" and input_options['embl_out'] is True </filter>
		</data>
		<data format="txt" name="gbk_file" label="GenBank Output">
			<filter>input_options['input_type'] == "--input-type nucl" and input_options['gbk_out'] is True </filter>
		</data>
		<data format="xls" name="xls_file" label="XLS Output">
			<filter>input_options['input_type'] == "--input-type nucl" and input_options['xls_out'] is True </filter>
		</data>
		<data format="txt" name="gp_file" label="GenPept File" >
			<filter>input_options['input_type'] == "--input-type prot" and input_options['genpept_out'] is True </filter>
		</data>
	</outputs>

	<requirements>
		<requirement type="package" version="2.0.2">antismash</requirement>
		<requirement type="set_environment">antiSMASH_wrapper_path</requirement>
	</requirements>

	<stdio>
		<regex match="^Ignored"
		       source="stderr"
                       level="log"
                       description="Some characters are not recognized in the sequence." />
		<regex match="^INFO"
		       source="both"
		       level="log" />
		<regex match="Traceback"
		       source="stderr"
		       level="fatal" />
		<regex match="Error"
		       source="stderr"
		       level="fatal" />
		<exit_code range="1:" level="fatal" description="An error has occured." />
	</stdio>

	<help>
**Introduction**

The secondary metabolism of bacteria and fungi constitutes a rich source of bioactive compounds of potential pharmaceutical value, comprising biosynthetic pathways of many chemicals that have been and are being utilized as e.g. antibiotics, cholesterol-lowering drugs or antitumor drugs.
Interestingly, the genes encoding the biosynthetic pathway responsible for the production of such a secondary metabolite are very often spatially clustered together at a certain position on the chromosome; such a compendium of genes is referred to as a 'secondary metabolite biosynthesis gene cluster'.
This genetic architecture has opened up the possibility for straightforward detection of secondary metabolite biosynthesis pathways by locating their gene clusters. In recent years, the costs of sequencing bacterial and fungi has dropped dramatically, and many genome sequences have become available. Based on profile hidden Markov models of genes that are specific for certain types of gene clusters, antiSMASH is able to accurately identify the gene clusters encoding secondary metabolites of all known broad chemical classes.
antiSMASH not only detects the gene clusters, but also offers detailed sequence analysis.

**antiSMASH Input Parameters**

The ideal input for antiSMASH is an annotated nucleotide file in Genbank format or EMBL format. You can either upload a GenBank/EMBL file manually, or simply enter the GenBank/RefSeq accession number of your sequence for antiSMASH to upload it. If no annotation is available, we recommend running your sequence through an annotation pipeline like RAST to obtain GBK/EMBL files with high-quality annotations.

Alternatively, you can provide a FASTA file containing a single sequence. antiSMASH will generate a preliminary annotation using Glimmer3, and use that to run the rest of the analysis. Multi-sequence FASTA files should be split into single FASTA files before running. When a prokaryotic FASTA file is provided, you will be able to input settings for Glimmer3 gene prediction: GenBank translation table (genetic code), minimal gene length (smallest genes allowed) and genome configuration (circular/linear chromosome or plasmid).

Input files should be properly formatted. If you are creating your GBK/EMBL/FASTA file manually, be sure to do so in a plain text editor like Notepad or Emacs, and saving your files as "All files (*.*)", ending with the correct extension (for example ".fasta", ".gbk", or ".embl".

There are several optional analyses that may or may not be run on your sequence.
Highly recommended is the Gene Cluster Blast Comparative Analysis, which runs BlastP using each amino acid sequence from a detected gene cluster as a query on a large database of predicted protein sequences from secondary metabolite biosynthetic gene clusters, and pools the results to identify the gene clusters that are most homologous to the gene cluster that was detected in your query nucleotide sequence.
This analysis is selected by default

Also available is the analysis of secondary metabolism gene families (smCOGs). This analysis attempts to allocate each gene in the detected gene clusters to a secondary metabolism-specific gene family using profile hidden Markov models specific for the conserved sequence region characteristic of this family. Additionally, a phylogenetic tree is constructed of each gene together with the (max. 100) sequences of the smCOG seed alignment.
This analysis is selected by default

For the most thorough genome analysis, we provide genome-wide PFAM HMM analysis of all genes in the genome through modules of the CLUSEAN pipeline. Of course, some regions important to secondary metabolism may have been missed in the gene cluster identification stage (e.g. because they represent the biosynthetic pathway of a yet unknown secondary metabolite). Therefore, when genome-wide PFAM HMM analysis is selected, the PFAM frequencies are also used to find all genome regions in which PFAM domains typical for secondary metabolism are overrepresented.
The whole genome PFAM HMM analysis is selected by default.

**antiSMASH Output**

The output of the antiSMASH analysis pipeline is organized in an interactive HTML page with SVG graphics, and different parts of the analysis are displayed in different panels for every gene cluster.

Initially, a list of identified clusters is displayed in the results page. A gene cluster can be selected for viewing by clicking its number (gene clusters are numbered in the order in which they appear on the input nucleotide sequence) in the "Select Gene Cluster" panel just below the top banner or by clicking on the colored "Cluster XX" boxes. A click on "Overview" brings you back to the overview list.
Gene cluster buttons are color coded by predicted secondary metabolite type. 

In the upper panel. "Gene cluster description", information is given about each gene cluster that was detected. In the upper line, the biosynthetic type and location of the gene cluster are displayed. Underneath this title line, all genes present in a detected gene cluster are outlined. The borders of the gene clusters have been estimated using different greedily chosen cut-offs specified per gene cluster type. Genes are color coded by predicted function. Putative biosynthetic genes are colored red, transport-related genes are colored blue, and regulation-related genes are colored green. These predictions depend on the smCOG functionality an will be missing if you chose to not run smCOG predictions. Hovering over a gene with the mouse will prompt the gene name to be displayed above the gene. Clicking the gene will provide more information on the gene: its annotation, its smCOG (secondary metabolism gene family), its location, and cross-links specific to that gene. 

In the middle panel. "Detailed annotation", you can find more in-depth information on the selected gene cluster. For predicted modular polyketide synthase (PKS) and/or nonribosomal peptide synthetase (NRPS) proteins, you will find the domain annotation. Clicking on a domain image will prompt more information to be displayed, such as the name of the detected domain, its precise location, any substrate specificites predicted, and a link to run Blast on the domain. For predicted Lantipeptide clusters, the predicted core peptide sequences of all identified prepeptides is displayed. 

The lower panel. "Homologous gene clusters", displays the top ten gene clusters from the internal antiSMASH database that are most similar to a detected gene cluster, visually aligned to it. The drop-down selection menu can be used to browse through the gene clusters. Genes with the same colour are putative homologs based on significant Blast hits between them. 

In the upper side panel on the right. "Predicted core structure", a rough prediction of the overall chemical structure of a the product of a detected nonribosomal peptide or polyketide biosynthesis gene cluster is given, along with prediction details for all monomers.

Prediction details are available for multiple methods. PKS AT domain specificities are predicted using a twenty-four amino acid signature sequence of the active site (Yadav et al., 2003), as well as with pHMMs based on the method of Minowa et al. (Minowa et al., 2007), which is also used to predict co-enzyme A ligase domain specificities. NRPS A domain specificities are predicted using both the signature sequence method and the support-vector machines-based method of NRPSPredictor2 (Rausch et al., 2005 and Röttig et al., 2011), and the method of Minowa et al. (Minowa et al., 2007). Ketoreductase domain-based stereochemistry predictions for PKSs (Starcevic et al., 2008) are also performed. 

In the upper right, a small list of buttons offers further functionality. The house-shaped button will get you back on the antiSMASH start page. The question-mark button will get you to this help page. The exclamation-mark button leads to a page explaining about antiSMASH. The downward-pointing arrow will open a menu offering to download the complete set of results from the antiSMASH run, a summary Excel file and to the summary EMBL/GenBank output file. The EMBL/GenBank file can be viewed in a genome browser such as Artemis.
	</help>
</tool>
