<tool id="mothur_consensus_seqs" name="Consensus.seqs" version="1.21.0" force_history_refresh="True">
 <description>Find a consensus sequence for each OTU or phylotype</description>
 <command interpreter="python">
  mothur_wrapper.py 
  --cmd='consensus.seqs'
  --outputdir='$logfile.extra_files_path'
  --fasta=$fasta
  #if $name.__str__ != "None" and len($name.__str__) > 0:
   --name=$name
  #end if
  #if $cutoff != None and len($cutoff.__str__) > 0 and 100 > int($cutoff.__str__) > 0:
   --cutoff=$cutoff
  #end if
  #if $otu.use == 'yes':
   --list=$otu.list
   #if $otu.label.__str__ != "None" and len($otu.label.__str__) > 0:
    --label='$otu.label'
   #end if
   --result='^mothur.\S+\.logfile$:'$logfile
   --datasetid='$logfile.id' --new_file_path='$__new_file_path__'
   --new_datasets='^\S+?\.(((unique|[0-9.]*)\.)?cons\.fasta)$:${fasta.ext}','^\S+?\.(((unique|[0-9.]*)\.)?cons\.names)$:names','^\S+?\.(((unique|[0-9.]*)\.)?cons\.summary)$:tabular'
  #else
   --result='^mothur.\S+\.logfile$:'$logfile,'^\S+\.cons\.summary$:'$summary,'^\S+\.cons\.fasta$:'$cons_fasta
  #end if
#if $count.__str__ != "None" and len($count.__str__) > 0:
	--count=$count
#end if
 </command>
 <inputs>
  <param name="fasta" type="data" format="align" label="fasta - Sequences to Bin" help="Sequences must be the same length"/>
  <param name="name" type="data" format="names" optional="true" label="name - Sequences Name reference"/>
  <conditional name="otu">
   <param name="use" type="select" label="Consensus sequence">
    <option value="no">Single consensus sequence</option>
    <option value="yes">Consensus sequence for each OTU in list</option>
   </param>
   <when value="no"/>
   <when value="yes">
    <param name="list" type="data" format="list" label="list - OTU List"/>
    <param name="label" type="select" optional="true" label="label - OTU Labels" multiple="true">
     <options>
      <filter type="data_meta" ref="list" key="labels" />
     </options>
    </param>
   </when>
  </conditional> <!-- -->
  <param name="cutoff" type="integer" value="100" optional="True" label="cutoff - set a percentage of sequences that support the base">
   <help>For example: cutoff=95 would return the base that was supported by at least 95% of sequences.</help>
   <validator type="in_range" message="The percentage cutoff must be between 1 and 100" min="1" max="100"/>
  </param>
<param name="count" type="data" format="count_table" optional="true" label="count - a count_table" help="generated by count.seqs"/>
 </inputs>
 <outputs>
  <data format="html" name="logfile" label="${tool.name} on ${on_string}: logfile" />
  <data format="tabular" name="summary" label="${tool.name} on ${on_string}: cons.summary">
   <filter>otu['use'] == 'no'</filter>
  </data>
  <data format_source="fasta" name="cons_fasta" label="${tool.name} on ${on_string}: cons.fasta">
   <filter>otu['use'] == 'no'</filter>
  </data>
 </outputs>
 <requirements>
<requirement type = "package" version ="1.33">mothur</requirement>
 </requirements>
 <tests>
 </tests>
 <help>
**Mothur Overview**

Mothur_, initiated by Dr. Patrick Schloss and his software development team
in the Department of Microbiology and Immunology at The University of Michigan,
provides bioinformatics for the microbial ecology community.

.. _Mothur: http://www.mothur.org/wiki/Main_Page

**Command Documenation**

The consensus.seqs_ command can be used in 2 ways: create a consensus sequence from a fastafile, or with a listfile create a consensus sequence for each otu. Sequences must be aligned.

.. _consensus.seqs: http://www.mothur.org/wiki/Consensus.seqs

 </help>
</tool>
